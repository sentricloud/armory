---
AWSTemplateFormatVersion: "2010-09-09"
Description: Automation for the setting of Default EBS Encryption

Metadata:
  TemplateInfo:
    Name: ebs-set-default-encryption
    Description: Automation for the setting of Default EBS Encryption
    Version: 1.0.0
    Source: armory/ebs/ebs-enable-encryption.yaml
    Note: Deploy to all accounts to enable new EBS volume encryption
    Security Hub: EC2.7
    LastUpdated: 20241206
    Nonce: 20241206

Parameters:
  NonceValue:
    Description: Random Identifier to force update of stackset resource
    Type: String

Resources:
  RoleScheduleAutomation:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F3
            reason: TODO limit policy for logs
          - id: W28
            reason: Name of role helps identify or associate it to solution
    Properties:
      RoleName: !Sub "ebs-ssm-automations-${AWS::Region}"
      Description: Role to allow Scheduled and Triggered Automations
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
                - scheduler.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ebs-automation-ssm
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SSMAutomationExecution
                Effect: Allow
                Action:
                  - ssm:DescribeAutomationExecutions
                  - ssm:GetAutomationExecution
                  - ssm:StartAutomationExecution
                  - ssm:StopAutomationExecution
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:automation-execution/*"
                  - !Sub "arn:${AWS::Partition}:ssm:*:${AWS::AccountId}:automation-definition/*:*"
              - Sid: EBSEnableEncryption
                Effect: Allow
                Action:
                  - ec2:GetEbsEncryptionByDefault
                  - ec2:EnableEbsEncryptionByDefault
                  - ec2:DisableEbsEncryptionByDefault
                Resource: "*"

  DocumentEbsEncrypt:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Automation
      Name: enable-ebs-encryption
      Content:
        description: Python to Enable EBS Encryption
        schemaVersion: "0.3"
        assumeRole: !GetAtt RoleScheduleAutomation.Arn
        mainSteps:
          - name: enable_ebs_encryption
            description: Enables EBS Encryption in Region
            action: aws:executeScript
            inputs:
              Runtime: python3.8
              Handler: ebs_encryption_handler
              Script: |-
                import boto3
                from botocore.exceptions import ClientError
                import json

                ec2 = boto3.client("ec2")

                def ebs_encryption_handler(events, context):
                  res, reason = get_encryption_status()
                  if reason == "Enabled":
                    print("EBS Encryption is already enabled")
                  elif reason == "Disabled":
                    print("EBS Encryption is disabled. Enabling...")
                    res, reason = enable_encryption()

                def get_encryption_status():
                  try:
                    status = ec2.get_ebs_encryption_by_default()
                    if status['EbsEncryptionByDefault'] == True:
                      return (True, "Enabled")
                    else:
                      return (False, "Disabled")
                  except Exception as e:
                    return (False, str(e))

                def enable_encryption():
                  try:
                    status = ec2.enable_ebs_encryption_by_default()
                    return (True, "Encryption Enabled")
                  except Exception as e:
                    return (False, str(e))

                def disable_encryption():
                  try:
                    response = ec2.disable_ebs_encryption_by_default()
                    return (True, "Encryption Disabled")
                  except Exception as e:
                    return (False, str(e))

  ScheduleEbsEncrypt:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: enable-ebs-encryption
      Description: Schedule the (re)enabling of Default EBS Encryption
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(24 hours)
      ScheduleExpressionTimezone: US/Central
      State: ENABLED
      Target:
        Arn: !Sub arn:${AWS::Partition}:scheduler:::aws-sdk:ssm:startAutomationExecution
        Input: '{"DocumentName": "enable-ebs-encryption"}'
        RoleArn: !GetAtt RoleScheduleAutomation.Arn

Outputs:
  NonceValue:
    Description: Just an output of the Nonce value
    Value: !Ref NonceValue
